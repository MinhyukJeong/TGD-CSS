<placement name="Scene 3" id="{13E1F5FC-AC81-4A6D-9EA8-7F4F855C9866}" preset_id="{00000000-0000-0000-0000-000000000000}" defpos="3"><item pos_left="0.274858" pos_top="0.454392" pos_right="0.725143" pos_bottom="0.545608" pos_an="1" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" crop_an="1" pixalign="0" zorder="0" lockmove="0" keep_ar="0" visible="1" visible_an="1" alpha="255" alpha_an="1" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" cc_brightness_an="1" cc_contrast_an="1" cc_hue_an="1" cc_saturation_an="1" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" rotate_x_an="1" rotate_y_an="1" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{AACEC8AD-5D82-4E1C-A08A-39429F708005}" srcid="{08F0AF40-7E95-4491-B1F8-1923BCDDC27F}" type="8" name="Text (오늘의 날짜)" cname="" item="html:plugin:titleplg*{&quot;scriptEnabled&quot;:&quot;script enabled&quot;,&quot;customScript&quot;:&quot;/*This script is a general purpose timing script*/\n\n/**\n * @name DefaultSettings\n * @label 기초 설정\n * @type head\n */\n//Count Mode &amp; Duration Mode Settings;\n\n/**\n * @name Mode\n * @label 모드\n * @type select\n * @options Date\n * @description 간단하게 오늘의 날짜를 표기해 줍니다.\n */\nvar Mode = \&quot;Date\&quot;;\n\n/**\n * @name DateFormat\n * @label 요일 표기\n * @type select\n * @options 짧게||길게\n * @description 짧게 = 2019년 1월 1일 화||길게 = 2019년 1월 1일 화요일\n */\nvar DateFormat = \&quot;길게\&quot;;\n\n\n\nvar CountDateValue = \&quot;01/17/2018\&quot;;\nvar CountTime = \&quot;06:44\&quot;;\nvar CountStartingFormat = \&quot;HH : MM : SS\&quot;;\nvar CountHideExtraZero = false;\nvar DisplayDayBeforeMonth = false;\nvar TimerMinutes = 0;\nvar TimerSeconds = 0;\nvar TimerStartingFormat = \&quot;MM : SS\&quot;;\nvar TimerHideExtraZero = false;\n\n/* Special thanks to xsplit forum moderator MsgtGunny for some general revisions and the count up functionality. :)\n   Kudos also to YJR BOURRET (forum name, Pho.Host) for proposing the Date stamp functionality.\n*/\n\n/*Do not modify anything below*/\n\n/**\n * @name XJS_URL\n * @description XJS FRAMEWORK URL LOCATION\n*/\nvar XJS_URL = \&quot;http://cdn2.xsplit.com/xjs/download/2.1.1/xjs.min.js?source\&quot;;\n\nfunction loadScript(url, callback)\n{\n    // Adding the script tag to the head\n    var head = document.getElementsByTagName('head')[0];\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n\n    // Then bind the event to the callback function.\n    // There are several events for cross browser compatibility.\n    script.onreadystatechange = callback;\n    script.onload = callback;\n\n    // Fire the loading\n    head.appendChild(script);\n}\n\n\nvar isPaused = false;\nvar CountDateArray = CountDateValue.split(\&quot;/\&quot;);\nCountDateValue = CountDateArray[2] + \&quot;,\&quot; + CountDateArray[0] + \&quot;,\&quot; + CountDateArray[1];\nvar CountDate = new Date(CountDateValue);\nvar CountHours = parseInt(CountTime.split(\&quot;:\&quot;)[0]);\nvar CountMinutes = parseInt(CountTime.split(\&quot;:\&quot;)[1]);\nvar UPDATEINTERVAL = 500; //0.5 seconds\nvar DAY_ARRAY = new Array('일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'),\n    DAY_ARRAY_SHORT = new Array('일', '월', '화', '수', '목', '금', '토'),\n    MONTH_ARRAY = new Array('1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월');\nvar currentTimeString='';\nvar startTime = new Date();\nvar componentName = '오늘의 날짜';\n\n\nfunction getTime()\n{\n    var currentTime = new Date();\n\n    if(Mode=='Date')\n    {\n        var currentWeekDay = currentTime.getDay();\n        var currentDay = currentTime.getDate();\n        var currentMonth = currentTime.getMonth();\n        var currentYear = currentTime.getFullYear();\n\n        if (DateFormat=='짧게')\n        {\n            // currentDay = ( currentDay &lt; 10 ? '0' : '' ) + currentDay;\n            // currentMonth = ( currentMonth &lt; 9 ? '0' : '' ) + (currentMonth+1);\n\n            if (DisplayDayBeforeMonth)\n            {\n                currentTimeString = currentYear + '년 ' + MONTH_ARRAY[currentMonth] + currentDay + '일 ' + DAY_ARRAY_SHORT[currentWeekDay];\n                /* currentTimeString = DAY_ARRAY_SHORT[currentWeekDay] + ' ' + currentDay + '/' + currentMonth + '/' + currentYear.toString().substring(2); */\n            }\n            else\n            {\n                /* currentTimeString = DAY_ARRAY_SHORT[currentWeekDay] + ' ' + currentMonth + '/' + currentDay + '/' + currentYear.toString().substring(2); */\n                currentTimeString = currentYear + '년 ' + MONTH_ARRAY[currentMonth] + currentDay + '일 ' + DAY_ARRAY_SHORT[currentWeekDay];\n            }\n        }\n        else\n        {\n            if (DisplayDayBeforeMonth)\n            {\n                /* currentTimeString = DAY_ARRAY[currentWeekDay] + ', ' + currentDay + ' ' + MONTH_ARRAY[currentMonth] + ', ' + currentYear; */\n                currentTimeString = currentYear + '년 ' + MONTH_ARRAY[currentMonth] + currentDay + '일 ' + DAY_ARRAY[currentWeekDay];\n            }\n            else\n            {\n                currentTimeString = currentYear + '년 ' + MONTH_ARRAY[currentMonth] + currentDay + '일 ' + DAY_ARRAY[currentWeekDay];\n                /* currentTimeString = DAY_ARRAY[currentWeekDay] + ', ' + MONTH_ARRAY[currentMonth] + ' ' + currentDay + ', ' + currentYear; */\n            }\n\n        }\n        SetText(currentTimeString, componentName);\n    }\n    else\n    {\n        var currentHours = currentTime.getHours();\n        var currentMinutes = currentTime.getMinutes();\n        var currentSeconds = currentTime.getSeconds();\n\n        currentMinutes = ( currentMinutes &lt; 10 ? '0' : '' ) + currentMinutes;\n        currentSeconds = ( currentSeconds &lt; 10 ? '0' : '' ) + currentSeconds;\n\n        if(Mode=='Clock24')\n        {\n            currentTimeString = currentHours + ':' + currentMinutes + ':' + currentSeconds;\n            //currentTimeString=currentTime.toLocaleTimeString();\n        }\n        else\n        {\n            var timeOfDay = ( currentHours &lt; 12 ) ? 'AM' : 'PM';\n            currentHours = ( currentHours &gt; 12 ) ? currentHours - 12 : currentHours;\n            currentHours = ( currentHours == 0 ) ? 12 : currentHours;\n\n            currentTimeString = currentHours + ':' + currentMinutes + ':' + currentSeconds+' '+timeOfDay;\n        }\n        SetText(currentTimeString, componentName);\n    }\n    smlTitleTimeouts = setTimeout(function() { getTime(); }, UPDATEINTERVAL);\n}\n\nvar isPreview = false, isThumbnail = false, isKeepLoaded = false;\nvar XJS, XJS_ITEM;\nvar xjsIsReady = false, shouldTogglePause = false;\n\n\nvar then;\nfunction CountDownTime(currentTime)\n{\n    if (isPaused)\n    {\n        return;\n    }\n\n    var now=Math.ceil((currentTime.getTime()*1)/1000);\n    now=parseInt(now,10);\n    TimerSeconds=parseInt(TimerSeconds);\n    TimerMinutes=parseInt(TimerMinutes);\n    if(!then)\n    {\n        then=now+(TimerSeconds)+(TimerMinutes*60);\n    }\n\n    processTimeValues();\n\n}\n\nfunction SetCountDownTime(now)\n{\n    var diff=(then-now);\n    var displayText = \&quot;\&quot;;\n\n    if(diff &lt;=0)\n    {\n        if (TimerStartingFormat == \&quot;SS\&quot;)\n        {\n            if (TimerHideExtraZero)\n            {\n                displayText = '0';\n            }\n            else\n            {\n                displayText = '00';\n            }\n        }\n        else\n        {\n            if (TimerHideExtraZero)\n            {\n                displayText = '0:00';\n            }\n            else\n            {\n                displayText = '00:00';\n            }\n        }\n        SetText(displayText, componentName);\n\n        return;\n    }\n\n    var seconds=diff%60;\n    var minutes=((diff-seconds)/60);\n\n    if (TimerStartingFormat == \&quot;MM : SS\&quot;)\n    {\n        if (!TimerHideExtraZero)\n        {\n            minutes = ( minutes &lt; 10 ? '0' : '' ) + minutes;\n        }\n        seconds = ( seconds &lt; 10 ? '0' : '' ) + seconds;\n        displayText = minutes+':'+seconds;\n    }\n    else\n    {\n        seconds = diff;\n        if (!TimerHideExtraZero)\n        {\n            seconds = ( seconds &lt; 10 ? '0' : '' ) + seconds;\n        }\n        displayText = seconds;\n    }\n\n    SetText(displayText, componentName);\n}\n\nvar dateCount;\nfunction Count(currentTime)\n{\n    if (Mode=='Duration')\n    {\n        if (isPaused)\n        {\n            return;\n        }\n\n        dateCount=parseInt(Math.ceil(startTime.getTime()/1000));\n        processTimeValues();\n\n    }\n    else\n    {\n        dateCount=parseInt(Math.ceil(CountDate.getTime()/1000));\n        dateCount=(dateCount+(CountHours*3600)+(CountMinutes*60));\n        SetCount(currentTime);\n    }\n\n\n}\n\nfunction SetCount(currentTime)\n{\n    var now=parseInt(Math.ceil(currentTime.getTime()/1000));\n\n    var diff = parseInt(now-dateCount);\n    if(diff &lt; 0)\n    {\n        diff=diff*(-1);\n    }\n\n    var daysDifference = parseInt(Math.floor(diff/60/60/24));\n    diff -= daysDifference*60*60*24;\n\n    var hoursDifference = parseInt(Math.floor(diff/60/60));\n    var hoursDifferenceInitial = hoursDifference;\n    diff -= hoursDifference*60*60;\n\n    var minutesDifference = parseInt(Math.floor(diff/60));\n    var minutesDifferenceInitial = minutesDifference;\n    diff -= minutesDifference*60;\n\n    var secondsDifference = Math.floor(diff);\n    var secondsDifferenceInitial = secondsDifference;\n\n    hoursDifference = ( hoursDifference &lt; 10 ? '0' : '' ) + hoursDifference;\n    minutesDifference = ( minutesDifference &lt; 10 ? '0' : '' ) + minutesDifference;\n    secondsDifference = ( secondsDifference &lt; 10 ? '0' : '' ) + secondsDifference;\n\n    if (CountStartingFormat == \&quot;D, HH : MM : SS\&quot;)\n    {\n        var daysText = '';\n        if(daysDifference &gt; 1)\n        {\n            daysText = daysDifference+' Days, ';\n        }\n        else if (daysDifference==1)\n        {\n            daysText = daysDifference+' Day, ';\n        }\n        SetText(daysText + hoursDifference+':'+minutesDifference+':'+secondsDifference, componentName);\n    }\n    else\n    {\n        hoursDifferenceInitial = (daysDifference * 24) + hoursDifferenceInitial;\n        if (CountStartingFormat == \&quot;HH : MM : SS\&quot;)\n        {\n\n            if (CountHideExtraZero)\n            {\n                SetText(hoursDifferenceInitial+':'+minutesDifference+':'+secondsDifference, componentName);\n            }\n            else\n            {\n                hoursDifference = ( hoursDifferenceInitial &lt; 10 ? '0' : '' ) + hoursDifferenceInitial;\n                SetText(hoursDifference+':'+minutesDifference+':'+secondsDifference, componentName);\n            }\n\n            return;\n        }\n        else if (CountStartingFormat == \&quot;MM : SS\&quot;)\n        {\n            minutesDifferenceInitial = (hoursDifferenceInitial * 60) + minutesDifferenceInitial;\n            if (CountHideExtraZero)\n            {\n                SetText(minutesDifferenceInitial+':'+secondsDifference, componentName);\n            }\n            else\n            {\n                minutesDifference = ( minutesDifferenceInitial &lt; 10 ? '0' : '' ) + minutesDifferenceInitial;\n                SetText(minutesDifference+':'+secondsDifference, componentName);\n            }\n\n            return;\n        }\n        else\n        {\n            secondsDifferenceInitial = (hoursDifferenceInitial * 60 * 60) + (minutesDifferenceInitial * 60) + secondsDifferenceInitial;\n            if (CountHideExtraZero)\n            {\n                SetText(secondsDifferenceInitial, componentName);\n            }\n            else\n            {\n                secondsDifference = ( secondsDifferenceInitial &lt; 10 ? '0' : '' ) + secondsDifferenceInitial;\n                SetText(secondsDifference, componentName);\n            }\n            return;\n        }\n\n    }\n}\n\nfunction OnSceneLoad()\n{\n    if(xjsIsReady) {\n        XJS_ITEM.getItemList()\n        .then(function(items){\n            if(items.length &gt; 0) {\n                processTimeValues();\n            }\n        });\n    }\n}\n\nvar secondsElapsed = 0;\nvar startPause, endPause;\n\n\nfunction TogglePause()\n{\n    if(xjsIsReady) {\n        var item;\n\n        XJS_ITEM.getItemList()\n        .then(function(items){\n\n            if(items.length &gt; 0) {\n                item = items[0];\n                return item.loadConfig();\n            }\n\n        }).then(function(config){\n            shouldTogglePause = false;\n        });\n    } else {\n      shouldTogglePause = true;\n    }\n}\n\nfunction processTimeValues()\n{\n\n    var item, allItems;\n    XJS_ITEM.getItemList()\n    .then(function(items) {\n\n        if(items.length &gt; 0) {\n            item = items[0];\n            allItems = items;\n            return item.getKeepLoaded();\n        }\n\n    }).then(function(isLoaded){\n\n        isKeepLoaded = isLoaded;\n        return new Promise(function(resolve) {\n\n            let isLoaded = false;\n            let idPromiseArray = [];\n            for (var i = 0; i &lt; allItems.length; i++) {\n                idPromiseArray.push(new Promise(function(innerResolve) {\n                    allItems[i].getView().then(function(view) {\n                        innerResolve(view);\n                    })\n                }));\n            }\n            Promise.all(idPromiseArray).then(function(allResolve) {\n                if (allResolve.indexOf(0)) {\n                    resolve(0);\n                } else if (allResolve.indexOf(1)){\n                    resolve(1);\n                } else if (allResolve.indexOf(2)){\n                    resolve(2);\n                } else {\n                    resolve(0);\n                }\n            });\n\n        });\n\n    }).then(function(view) {\n\n        isPreview = view == 1 || view == 2;\n        isThumbnail = view == 2;\n        var currentTime = new Date();\n        var now=Math.ceil((currentTime.getTime()*1)/1000);\n        now=parseInt(now,10);\n\n        if(Mode == \&quot;Timer\&quot;) {\n\n            if(isPreview) {\n\n                if(isKeepLoaded) {\n                   SetCountDownTime(now);\n                } else if(isThumbnail) {\n                    then=now+(TimerSeconds)+(TimerMinutes*60);\n                    TimerMinutes = ( TimerMinutes &lt; 10 ? '0' : '' ) + TimerMinutes;\n                    TimerSeconds = ( TimerSeconds &lt; 10 ? '0' : '' ) + TimerSeconds;\n                    SetText(TimerMinutes+':'+TimerSeconds, componentName);\n                } else {\n                    SetCountDownTime(now);\n                }\n\n            } else {\n                SetCountDownTime(now);\n            }\n\n        } else if(Mode == \&quot;Duration\&quot; || Mode == \&quot;Count\&quot;) {\n\n            if(isPreview) {\n\n                if(isKeepLoaded) {\n                    SetCount(currentTime);\n                } else if(isThumbnail) {\n                    startTime = new Date();\n                    SetText('0:00:00', componentName);\n                } else {\n                    SetCount(currentTime);\n                }\n\n            } else {\n                SetCount(currentTime);\n            }\n        }\n\n    });\n}\n\nfunction HandlePostMessage(event)\n{\n    if (event.data == \&quot;OnSceneLoad\&quot;)\n    {\n        OnSceneLoad();\n    }\n    else if (event.data == \&quot;TogglePause\&quot;)\n    {\n        TogglePause();\n    }\n}\n\nif (smlTitleTimeouts &amp;&amp; smlTitleTimeouts != null)\n{\n    clearTimeout(smlTitleTimeouts);\n}\n\nwindow.addEventListener('message', HandlePostMessage, false);\n\nSetText(\&quot;\&quot;, componentName);\n\nvar loadScriptCallback = function() {\n     XJS = require('xjs');\n     XJS.ready().then(function() {\n        XJS_ITEM = XJS.Item;\n        xjsIsReady = true;\n        if(shouldTogglePause){\n            shouldTogglePause = false;\n            TogglePause();\n        }\n        getTime();\n     })\n\n\n};\n\nloadScript(XJS_URL, loadScriptCallback);\n&quot;,&quot;text&quot;:&quot;Title Text&quot;,&quot;fontStyle&quot;:&quot;Calibri&quot;,&quot;color&quot;:&quot;#FFFFFF&quot;,&quot;outlineColor&quot;:&quot;#FFFFFF&quot;,&quot;outline&quot;:&quot;none&quot;,&quot;alpha&quot;:100,&quot;shadowColor&quot;:&quot;#FFFFFF&quot;,&quot;distance&quot;:0,&quot;blur&quot;:0,&quot;angle&quot;:0,&quot;shadowOpacity&quot;:100,&quot;textDeco&quot;:&quot;none&quot;,&quot;textAlign&quot;:&quot;center&quot;,&quot;vertAlign&quot;:&quot;middle&quot;,&quot;scrollSpeed&quot;:0,&quot;scrollingOrientation&quot;:&quot;horizontal&quot;,&quot;lineLimit&quot;:1,&quot;customScriptName&quot;:&quot;Custom Script&quot;,&quot;fadeDelimeter&quot;:&quot;||&quot;,&quot;fadeInterval&quot;:1000,&quot;fadeSpeed&quot;:1000}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" mipmaps="0" autoresdet="1" keeploaded="0" RefreshOnScnLoad="0" RefreshOnSrcShow="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" CuePoints="" FilePlaylist="" fdeinterlace="0" InPoint="0" OutPoint="0" OpWhenFinished="0" StartOnLoad="1" StartOnSrcShow="0" RememberPosition="1" LastPosition="0" LastRunState="-1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserCookiePath="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookieFlags="0" Browser60fps="0" SwfWrapper="1" DllGrant="" custom=""/></placement>
